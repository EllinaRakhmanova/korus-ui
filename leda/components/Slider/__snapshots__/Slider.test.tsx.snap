// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slider SNAPSHOTS should render 1`] = `
<Slider>
  <Div
    className="slider-wrapper"
  >
    <div
      className="slider-wrapper"
    >
      <ReactSlider
        className="slider-container"
        defaultValue={0}
        disabled={false}
        invert={false}
        max={100}
        min={0}
        minDistance={0}
        onAfterChange={[Function]}
        onChange={[Function]}
        orientation="horizontal"
        pageFn={[Function]}
        pearling={false}
        renderThumb={[Function]}
        renderTrack={[Function]}
        snapDragDisabled={false}
        step={1}
        thumbActiveClassName="active"
        thumbClassName="slider-handle"
        trackClassName="slider-track"
        value={0}
        withTracks={true}
      >
        <div
          className="slider-container"
          onClick={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="slider-track active"
            key="slider-track-0"
            style={
              Object {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "willChange": "",
              }
            }
          />
          <div
            className="slider-track"
            key="slider-track-1"
            style={
              Object {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "willChange": "",
              }
            }
          />
          <div
            aria-orientation="horizontal"
            aria-valuemax={100}
            aria-valuemin={0}
            aria-valuenow={0}
            className="slider-handle slider-handle-0 "
            key="slider-handle-0"
            onFocus={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            role="slider"
            style={
              Object {
                "left": "0px",
                "position": "absolute",
                "willChange": "",
                "zIndex": 1,
              }
            }
            tabIndex={0}
          >
            <Component
              key="0"
              shouldRender={false}
              theme={
                Object {
                  "container": "slider-container",
                  "handle": "slider-handle",
                  "label": "slider-label",
                  "labelContainer": "slider-label-container",
                  "tooltipArrow": "tooltip-arrow",
                  "tooltipInner": "tooltip-inner",
                  "tooltipWrap": "tooltip top",
                  "track": "slider-track",
                  "trackActive": "active",
                  "wrapper": "slider-wrapper",
                }
              }
              value={0}
            />
          </div>
        </div>
      </ReactSlider>
      <Component
        max={100}
        min={0}
        shouldRender={true}
        theme={
          Object {
            "container": "slider-container",
            "handle": "slider-handle",
            "label": "slider-label",
            "labelContainer": "slider-label-container",
            "tooltipArrow": "tooltip-arrow",
            "tooltipInner": "tooltip-inner",
            "tooltipWrap": "tooltip top",
            "track": "slider-track",
            "trackActive": "active",
            "wrapper": "slider-wrapper",
          }
        }
        type="minmax"
        value={0}
      >
        <div
          className="slider-label-container"
        >
          <Span
            className="slider-label"
          >
            <span
              className="slider-label"
            >
              0
               
              <Units>
                <Span>
                  <span />
                </Span>
              </Units>
            </span>
          </Span>
          <Span
            className="slider-label"
          >
            <span
              className="slider-label"
            >
              100
               
              <Units>
                <Span>
                  <span />
                </Span>
              </Units>
            </span>
          </Span>
        </div>
      </Component>
    </div>
  </Div>
</Slider>
`;

exports[`Slider SNAPSHOTS should render disabled state 1`] = `
<Slider
  isDisabled={true}
  value={50}
>
  <Div
    className="slider-wrapper"
  >
    <div
      className="slider-wrapper"
    >
      <ReactSlider
        className="slider-container"
        defaultValue={0}
        disabled={true}
        invert={false}
        max={100}
        min={0}
        minDistance={0}
        onAfterChange={[Function]}
        onChange={[Function]}
        orientation="horizontal"
        pageFn={[Function]}
        pearling={false}
        renderThumb={[Function]}
        renderTrack={[Function]}
        snapDragDisabled={false}
        step={1}
        thumbActiveClassName="active"
        thumbClassName="slider-handle"
        trackClassName="slider-track"
        value={50}
        withTracks={true}
      >
        <div
          className="slider-container disabled"
          onClick={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="slider-track active"
            key="slider-track-0"
            style={
              Object {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "willChange": "",
              }
            }
          />
          <div
            className="slider-track"
            key="slider-track-1"
            style={
              Object {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "willChange": "",
              }
            }
          />
          <div
            aria-orientation="horizontal"
            aria-valuemax={100}
            aria-valuemin={0}
            aria-valuenow={50}
            className="slider-handle slider-handle-0 "
            key="slider-handle-0"
            onFocus={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            role="slider"
            style={
              Object {
                "left": "0px",
                "position": "absolute",
                "willChange": "",
                "zIndex": 1,
              }
            }
            tabIndex={0}
          >
            <Component
              key="0"
              shouldRender={false}
              theme={
                Object {
                  "container": "slider-container",
                  "handle": "slider-handle",
                  "label": "slider-label",
                  "labelContainer": "slider-label-container",
                  "tooltipArrow": "tooltip-arrow",
                  "tooltipInner": "tooltip-inner",
                  "tooltipWrap": "tooltip top",
                  "track": "slider-track",
                  "trackActive": "active",
                  "wrapper": "slider-wrapper",
                }
              }
              value={50}
            />
          </div>
        </div>
      </ReactSlider>
      <Component
        max={100}
        min={0}
        shouldRender={true}
        theme={
          Object {
            "container": "slider-container",
            "handle": "slider-handle",
            "label": "slider-label",
            "labelContainer": "slider-label-container",
            "tooltipArrow": "tooltip-arrow",
            "tooltipInner": "tooltip-inner",
            "tooltipWrap": "tooltip top",
            "track": "slider-track",
            "trackActive": "active",
            "wrapper": "slider-wrapper",
          }
        }
        type="minmax"
        value={50}
      >
        <div
          className="slider-label-container"
        >
          <Span
            className="slider-label"
          >
            <span
              className="slider-label"
            >
              0
               
              <Units>
                <Span>
                  <span />
                </Span>
              </Units>
            </span>
          </Span>
          <Span
            className="slider-label"
          >
            <span
              className="slider-label"
            >
              100
               
              <Units>
                <Span>
                  <span />
                </Span>
              </Units>
            </span>
          </Span>
        </div>
      </Component>
    </div>
  </Div>
</Slider>
`;
